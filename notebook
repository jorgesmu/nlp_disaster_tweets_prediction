{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_df = pd.read_csv(\"train.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>keyword</th>\n",
       "      <th>location</th>\n",
       "      <th>text</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Our Deeds are the Reason of this #earthquake M...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Forest fire near La Ronge Sask. Canada</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>All residents asked to 'shelter in place' are ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13,000 people receive #wildfires evacuation or...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id keyword location                                               text  \\\n",
       "0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n",
       "1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n",
       "2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n",
       "3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n",
       "4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n",
       "\n",
       "   target  \n",
       "0       1  \n",
       "1       1  \n",
       "2       1  \n",
       "3       1  \n",
       "4       1  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id              int64\n",
       "keyword        object\n",
       "location       object\n",
       "text           object\n",
       "target          int64\n",
       "words_count     int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    4342\n",
       "1    3271\n",
       "Name: target, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['target'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Pie chart, where the slices will be ordered and plotted counter-clockwise:\n",
    "labels = 'Fake', 'Disaster'\n",
    "\n",
    "fig1, ax1 = plt.subplots()\n",
    "ax1.pie(train_df['target'].value_counts(), labels=labels, autopct='%1.1f%%', shadow=True, startangle=90)\n",
    "ax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>keyword</th>\n",
       "      <th>location</th>\n",
       "      <th>text</th>\n",
       "      <th>target</th>\n",
       "      <th>words_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Our Deeds are the Reason of this #earthquake M...</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Forest fire near La Ronge Sask. Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>All residents asked to 'shelter in place' are ...</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13,000 people receive #wildfires evacuation or...</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id keyword location                                               text  \\\n",
       "0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n",
       "1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n",
       "2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n",
       "3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n",
       "4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n",
       "\n",
       "   target  words_count  \n",
       "0       1           13  \n",
       "1       1            7  \n",
       "2       1           22  \n",
       "3       1            8  \n",
       "4       1           16  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['words_count'] = train_df['text'].apply(lambda x: len(x.lower().split()))\n",
    "train_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets see value counts for length of the tweet for disaster and fake"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "disaters_word_count = train_df.loc[train_df['target']==1,['words_count']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "18    277\n",
       "17    243\n",
       "11    221\n",
       "13    218\n",
       "15    211\n",
       "14    207\n",
       "16    191\n",
       "19    191\n",
       "20    186\n",
       "12    186\n",
       "10    149\n",
       "9     143\n",
       "21    133\n",
       "8     133\n",
       "22    126\n",
       "23     89\n",
       "7      83\n",
       "24     57\n",
       "6      52\n",
       "25     42\n",
       "5      39\n",
       "4      24\n",
       "26     22\n",
       "27     19\n",
       "3      13\n",
       "28      6\n",
       "29      4\n",
       "2       4\n",
       "30      2\n",
       "Name: words_count, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "disaters_word_count['words_count'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# histogram\n",
    "# the same, but horizontal\n",
    "fig=plt.figure()\n",
    "ax = fig.add_subplot(111)\n",
    "\n",
    "plt.title('Disaster, word count per tweet: Histogram',fontsize=16,fontweight='bold')\n",
    "ax.set_xlabel('word count')\n",
    "disaters_word_count['words_count'].plot.hist(color='lightblue', figsize=(8, 4))\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Tweets word per disaster tweet')"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# histogram with density distribution\n",
    "# Density Plot and Histogram using sns\n",
    "sns.distplot(disaters_word_count['words_count'], hist=True, kde=True, \n",
    "             color = 'lightblue', \n",
    "             hist_kws={'edgecolor':'grey'},\n",
    "             kde_kws={'linewidth': 4})\n",
    "\n",
    "plt.xlabel('Word count')\n",
    "plt.ylabel('Density')\n",
    "plt.title('Tweets word per disaster tweet')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Same for non disaster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "fakes_word_count = train_df.loc[train_df['target']==0,['words_count']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11    276\n",
       "16    260\n",
       "17    251\n",
       "14    243\n",
       "12    229\n",
       "13    227\n",
       "20    223\n",
       "9     220\n",
       "18    217\n",
       "15    214\n",
       "19    199\n",
       "10    185\n",
       "21    163\n",
       "8     160\n",
       "7     159\n",
       "22    153\n",
       "6     134\n",
       "24    132\n",
       "23    131\n",
       "5     120\n",
       "4      91\n",
       "25     87\n",
       "26     76\n",
       "3      62\n",
       "27     41\n",
       "28     35\n",
       "2      30\n",
       "29      9\n",
       "1       8\n",
       "30      4\n",
       "31      3\n",
       "Name: words_count, dtype: int64"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fakes_word_count['words_count'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# histogram\n",
    "# the same, but horizontal\n",
    "fig=plt.figure()\n",
    "ax = fig.add_subplot(111)\n",
    "\n",
    "plt.title('Fake disaster alerts, word count per tweet: Histogram',fontsize=16,fontweight='bold')\n",
    "ax.set_xlabel('word count')\n",
    "fakes_word_count['words_count'].plot.hist(color='lightblue', figsize=(8, 4))\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Tweets words count per fake disaster alerts')"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# histogram with density distribution\n",
    "# Density Plot and Histogram using sns\n",
    "sns.distplot(fakes_word_count['words_count'], hist=True, kde=True, \n",
    "             color = 'lightblue', \n",
    "             hist_kws={'edgecolor':'grey'},\n",
    "             kde_kws={'linewidth': 4})\n",
    "\n",
    "plt.xlabel('Word count')\n",
    "plt.ylabel('Density')\n",
    "plt.title('Tweets words count per fake disaster alerts')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Now I want to analyze the overal word count distribution + the correlation between this and the word count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11    497\n",
       "18    494\n",
       "17    494\n",
       "16    451\n",
       "14    450\n",
       "13    445\n",
       "15    425\n",
       "12    415\n",
       "20    409\n",
       "19    390\n",
       "9     363\n",
       "10    334\n",
       "21    296\n",
       "8     293\n",
       "22    279\n",
       "7     242\n",
       "23    220\n",
       "24    189\n",
       "6     186\n",
       "5     159\n",
       "25    129\n",
       "4     115\n",
       "26     98\n",
       "3      75\n",
       "27     60\n",
       "28     41\n",
       "2      34\n",
       "29     13\n",
       "1       8\n",
       "30      6\n",
       "31      3\n",
       "Name: words_count, dtype: int64"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['words_count'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# histogram\n",
    "# the same, but horizontal\n",
    "fig=plt.figure()\n",
    "ax = fig.add_subplot(111)\n",
    "\n",
    "plt.title('Overall alerts, word count per tweet: Histogram',fontsize=16,fontweight='bold')\n",
    "ax.set_xlabel('word count')\n",
    "train_df['words_count'].plot.hist(color='lightblue', figsize=(8, 4))\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Tweets words count per disaster alerts')"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# histogram with density distribution\n",
    "# Density Plot and Histogram using sns\n",
    "sns.distplot(train_df['words_count'], hist=True, kde=True, \n",
    "             color = 'lightblue', \n",
    "             hist_kws={'edgecolor':'grey'},\n",
    "             kde_kws={'linewidth': 4})\n",
    "\n",
    "plt.xlabel('Word count')\n",
    "plt.ylabel('Density')\n",
    "plt.title('Tweets words count per disaster alerts')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_df.plot.scatter('target','words_count', title='Relationship between words count and result',alpha=0.25,figsize=(12,8));\n",
    "ax=plt.gca()\n",
    "ax.set_ylabel('Words')\n",
    "ax.set_xlabel('Disaster');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>target</th>\n",
       "      <th>words_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.060781</td>\n",
       "      <td>0.006420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>target</th>\n",
       "      <td>0.060781</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.039966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>words_count</th>\n",
       "      <td>0.006420</td>\n",
       "      <td>0.039966</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   id    target  words_count\n",
       "id           1.000000  0.060781     0.006420\n",
       "target       0.060781  1.000000     0.039966\n",
       "words_count  0.006420  0.039966     1.000000"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### it doent look like there is a strong correlationship between them, Lets explore keywords and disasters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "fatalities               45\n",
       "armageddon               42\n",
       "deluge                   42\n",
       "damage                   41\n",
       "body%20bags              41\n",
       "                         ..\n",
       "forest%20fire            19\n",
       "epicentre                12\n",
       "threat                   11\n",
       "inundation               10\n",
       "radiation%20emergency     9\n",
       "Name: keyword, Length: 221, dtype: int64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['keyword'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Top real disaster keywords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "real_df = train_df.loc[train_df['target']==1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "outbreak       39\n",
       "derailment     39\n",
       "wreckage       39\n",
       "debris         37\n",
       "typhoon        37\n",
       "               ..\n",
       "body%20bags     1\n",
       "ruin            1\n",
       "epicentre       1\n",
       "blazing         1\n",
       "body%20bag      1\n",
       "Name: keyword, Length: 220, dtype: int64"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "real_kw_counts = real_df['keyword'].value_counts()\n",
    "real_kw_counts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "14.677272727272728"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "real_kw_counts.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>keyword</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>outbreak</th>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>derailment</th>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wreckage</th>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>debris</th>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>typhoon</th>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>body%20bags</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ruin</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>epicentre</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>blazing</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>body%20bag</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>220 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             keyword\n",
       "outbreak          39\n",
       "derailment        39\n",
       "wreckage          39\n",
       "debris            37\n",
       "typhoon           37\n",
       "...              ...\n",
       "body%20bags        1\n",
       "ruin               1\n",
       "epicentre          1\n",
       "blazing            1\n",
       "body%20bag         1\n",
       "\n",
       "[220 rows x 1 columns]"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "real_kw_frame = real_kw_counts.to_frame()\n",
    "real_kw_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>keyword</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>outbreak</th>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>derailment</th>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wreckage</th>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>debris</th>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>typhoon</th>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>oil%20spill</th>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>evacuated</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>suicide%20bombing</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rescuers</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>suicide%20bomb</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>razed</th>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nuclear%20disaster</th>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    keyword\n",
       "outbreak                 39\n",
       "derailment               39\n",
       "wreckage                 39\n",
       "debris                   37\n",
       "typhoon                  37\n",
       "oil%20spill              37\n",
       "evacuated                32\n",
       "suicide%20bombing        32\n",
       "rescuers                 32\n",
       "suicide%20bomb           32\n",
       "razed                    31\n",
       "nuclear%20disaster       31"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# more than 30 matches\n",
    "more_than_30 = real_kw_frame.loc[kw_frame['keyword']>30]\n",
    "more_than_30"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'keywords')"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "more_than_30.plot(kind='bar',figsize=(16,8),rot=85,title='Top Award Winners',color=(0.7, 0.2, 0.4, 0.6));\n",
    "ax=plt.gca()\n",
    "ax.set_ylabel('real disasters');\n",
    "ax.set_xlabel('keywords')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Top Fake disaster keywords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15          NaN\n",
       "16          NaN\n",
       "17          NaN\n",
       "18          NaN\n",
       "19          NaN\n",
       "         ...   \n",
       "7581    wrecked\n",
       "7582    wrecked\n",
       "7584        NaN\n",
       "7587        NaN\n",
       "7593        NaN\n",
       "Name: keyword, Length: 4342, dtype: object"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fake_df = train_df.loc[train_df['target']==0]\n",
    "fake_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "body%20bags          40\n",
       "armageddon           37\n",
       "harm                 37\n",
       "deluge               36\n",
       "wrecked              36\n",
       "                     ..\n",
       "typhoon               1\n",
       "oil%20spill           1\n",
       "outbreak              1\n",
       "suicide%20bombing     1\n",
       "suicide%20bomber      1\n",
       "Name: keyword, Length: 218, dtype: int64"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fake_kw_counts = fake_df['keyword'].value_counts()\n",
    "fake_kw_counts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "19.8302752293578"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fake_kw_counts.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>keyword</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>body%20bags</th>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>armageddon</th>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>harm</th>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>deluge</th>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wrecked</th>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>typhoon</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>oil%20spill</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>outbreak</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>suicide%20bombing</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>suicide%20bomber</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>218 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   keyword\n",
       "body%20bags             40\n",
       "armageddon              37\n",
       "harm                    37\n",
       "deluge                  36\n",
       "wrecked                 36\n",
       "...                    ...\n",
       "typhoon                  1\n",
       "oil%20spill              1\n",
       "outbreak                 1\n",
       "suicide%20bombing        1\n",
       "suicide%20bomber         1\n",
       "\n",
       "[218 rows x 1 columns]"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fake_kw_frame = fake_kw_counts.to_frame()\n",
    "fake_kw_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>keyword</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>body%20bags</th>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>armageddon</th>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>harm</th>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>deluge</th>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wrecked</th>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ruin</th>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>twister</th>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>siren</th>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>explode</th>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fear</th>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>panic</th>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>aftershock</th>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>screaming</th>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>blazing</th>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>blizzard</th>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>blaze</th>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sinking</th>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>traumatised</th>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>crush</th>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bloody</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>curfew</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>upheaval</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>body%20bag</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hellfire</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>collide</th>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>blew%20up</th>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>smoke</th>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>electrocute</th>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>panicking</th>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             keyword\n",
       "body%20bags       40\n",
       "armageddon        37\n",
       "harm              37\n",
       "deluge            36\n",
       "wrecked           36\n",
       "ruin              36\n",
       "twister           35\n",
       "siren             35\n",
       "explode           35\n",
       "fear              35\n",
       "panic             34\n",
       "aftershock        34\n",
       "screaming         34\n",
       "blazing           33\n",
       "blizzard          33\n",
       "blaze             33\n",
       "sinking           33\n",
       "traumatised       33\n",
       "crush             33\n",
       "bloody            32\n",
       "curfew            32\n",
       "upheaval          32\n",
       "body%20bag        32\n",
       "hellfire          32\n",
       "collide           31\n",
       "blew%20up         31\n",
       "smoke             31\n",
       "electrocute       31\n",
       "panicking         31"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# more than 30 matches\n",
    "fake_more_than_30 = fake_kw_frame.loc[fake_kw_frame['keyword']>30]\n",
    "fake_more_than_30"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'keywords')"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fake_more_than_30.plot(kind='bar',figsize=(16,8),rot=85,title='Top Award Winners',color=(0.7, 0.2, 0.4, 0.6));\n",
    "ax=plt.gca()\n",
    "ax.set_ylabel('real disasters');\n",
    "ax.set_xlabel('keywords')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Lets look for a correlation between keywords and predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Top disaster locations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "USA                     67\n",
       "United States           27\n",
       "Nigeria                 22\n",
       "India                   20\n",
       "Mumbai                  19\n",
       "                        ..\n",
       "St. Louis                1\n",
       "Chattanooga TN           1\n",
       "Republica Dominicana     1\n",
       "Bahrain                  1\n",
       "Loughborough.            1\n",
       "Name: location, Length: 1513, dtype: int64"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "real_location_counts = real_df['location'].value_counts()\n",
    "real_location_counts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>USA</th>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>United States</th>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nigeria</th>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>India</th>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mumbai</th>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>St. Louis</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chattanooga TN</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Republica Dominicana</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bahrain</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loughborough.</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1513 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      location\n",
       "USA                         67\n",
       "United States               27\n",
       "Nigeria                     22\n",
       "India                       20\n",
       "Mumbai                      19\n",
       "...                        ...\n",
       "St. Louis                    1\n",
       "Chattanooga TN               1\n",
       "Republica Dominicana         1\n",
       "Bahrain                      1\n",
       "Loughborough.                1\n",
       "\n",
       "[1513 rows x 1 columns]"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "real_location_frame = real_location_counts.to_frame()\n",
    "real_location_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.4514210178453404"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "real_location_frame['location'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>USA</th>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>United States</th>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nigeria</th>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>India</th>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mumbai</th>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UK</th>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>New York</th>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>London</th>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Washington, DC</th>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Canada</th>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Worldwide</th>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                location\n",
       "USA                   67\n",
       "United States         27\n",
       "Nigeria               22\n",
       "India                 20\n",
       "Mumbai                19\n",
       "UK                    16\n",
       "New York              16\n",
       "London                16\n",
       "Washington, DC        15\n",
       "Canada                13\n",
       "Worldwide             12"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# more than 10 matches\n",
    "real_location_more_than_10 = real_location_frame.loc[real_location_frame['location']>10]\n",
    "real_location_more_than_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'locations')"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "real_location_more_than_10.plot(kind='bar',figsize=(16,8),rot=85,title='Top Award Winners',color=(0.7, 0.2, 0.4, 0.6));\n",
    "ax=plt.gca()\n",
    "ax.set_ylabel('real disasters');\n",
    "ax.set_xlabel('locations')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
